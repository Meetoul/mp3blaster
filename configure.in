dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/main.cc)
AM_INIT_AUTOMAKE(mp3blaster, 3.2.1)

AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LN_S
AC_PROG_INSTALL
AC_PROG_RANLIB

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_CHECK_FUNCS(strdup strstr)

AC_LANG_CPLUSPLUS

#For FreeBSD, look in /usr/local/(lib,include) first, since ncurses4
#must be installed as an add-on on these systems in /usr/local
if test "`uname -s`" = "FreeBSD" ; then
  echo "FreeBSD detected."
  FREEBSD=1
  LDFLAGS="-L/usr/local/lib $LDFLAGS"
  CPPFLAGS="-I/usr/local/include $CPPFLAGS"
  AC_DEFINE(AUDIO_NONBLOCKING)
fi

#For NetBSD, look in /usr/pkg/(lib,include) first. Otherwise, the wrong
#ncurses package might be detected.

if test "`uname -s`" = "NetBSD" ; then
  echo "NetBSD detected."
  NETBSD=1
  LDFLAGS="-L/usr/pkg/lib $LDFLAGS"
  CPPFLAGS="-I/usr/pkg/include $CPPFLAGS"
fi

if test "`uname -s`" = "OpenBSD" ; then
	echo "OpenBSD detected"
	OPENBSD=1
	LDFLAGS="-L/usr/local/lib $LDFLAGS"
	CPPFLAGS="-I/usr/local/include $CPPFLAGS"
fi

dnl Check for additional paths to include-files and directories first 
AC_ARG_WITH(cxxflags,
  [  --with-cxxflags         Override default compiler flags],
	[ CXXFLAGS="$withval " ],
	[ CXXFLAGS="-O2 -Wall -W -fno-strength-reduce " ])
AC_ARG_WITH(mysql-includes,
  [  --with-mysql-includes   Specify location of MySQL headers],
  [ CPPFLAGS="$CPPFLAGS -I$withval" ])
AC_ARG_WITH(mysql-libs,
  [  --with-mysql-libs       Specify location of MySQL libs],
  [ LDFLAGS="$LDFLAGS -L$withval" ])
AC_ARG_WITH(extra-includes,
  [  --with-extra-includes   Specify paths for additional headerfiles],
  [ CPPFLAGS="$CPPFLAGS $withval" ])
AC_ARG_WITH(nas-includes,
  [  --with-nas-includes     Specify location of NAS headers],
  [ CPPFLAGS="$CPPFLAGS -I$withval" ])
AC_ARG_WITH(nas-libs,
  [  --with-nas-libs         Specify location of NAS libs],
  [ LDFLAGS="$LDFLAGS -L$withval" ])
AC_ARG_WITH(extra-libs,
  [  --with-extra-libs       Specify location of extra libs],
  [ LDFLAGS="$LDFLAGS $withval" ])
AC_ARG_WITH(pthreads,
  [  --with-pthreads         Use pthreads [default=yes]],
  [ if test "$withval" = "yes" ; then INCLUDEPTHREAD=1
    else INCLUDEPTHREAD=0; fi ],
  [ INCLUDEPTHREAD=1 ])
dnl silently auto-disable pthreads if pth is chosen.
HAVE_PTH="no"
AC_ARG_WITH(pth,
  [  --with-pth              Experimental support for pth lib [default=no]],
  [ if test "$withval" = "yes" ; then HAVE_PTH="yes" ; INCLUDEPTHREAD=0 ; fi ])
HAVE_LIRC="no"
AC_ARG_WITH(lirc,
  [  --with-lirc             Support for LIRC [default=no]],
  [ if test "$withval" = "yes"; then HAVE_LIRC="yes" ; fi ])

HAVE_OGG="yes"
AC_ARG_WITH(oggvorbis,
  [  --with-oggvorbis        Beta support for ogg vorbis format [default=yes]],
  [ if test "$withval" = "no" ; then HAVE_OGG="no" ; fi ])

AC_ARG_WITH(mysql,
  [  --with-mysql            Mp3tag with alpha MySQL support [default=no]],
  [ if test "$withval" = "yes" ; then HAVE_MYSQL="yes"
    else HAVE_MYSQL="no"; fi ],
  [ HAVE_MYSQL="no" ])
AC_ARG_WITH(nas,
  [  --with-nas              Network Audio System [default=no]],
  [ if test "$withval" = "yes" ; then WANTNAS=1
    else WANTNAS=0 ; fi ],
  [ WANTNAS=0 ])
AC_ARG_WITH(curses,
  [  --with-curses           Force using curses, even if ncurses found [default=no]],
  [ if test "$withval" = "yes" ; then FORCECURSES=1
    else FORCECURSES=0; fi],
  [ FORCECURSES=0 ])
AC_ARG_WITH(sidplay,
  [  --with-sidplay          Sidplayer support [default=yes]],
  [ if test "$withval" = "yes" ; then WANT_SID=1
    else WANT_SID=0 ; fi ],
  [ WANT_SID=1 ])
AC_ARG_ENABLE(static,
  [  --enable-static         Build static binaries instead [default=no]],
  [ if test "$enableval" = "yes" ; then
      LDFLAGS="$LDFLAGS -static" ; HAVE_STATIC="yes"
    else HAVE_STATIC="no" ; fi ],
  [ HAVE_STATIC="no" ])
AC_ARG_ENABLE(newthreads,
  [  --enable-newthreads     New (very experimental) buffering [default=no]],
  [ NEWTHREAD=1 ])

dnl Does the user want to use the 'newthreads' buffering system?
dnl Perform this check *before* any pth/pthreads check!
if test "$NEWTHREAD" = "1" ; then
  echo "***********"
  echo "Enabling experimental 'newthreads' buffered playback support."
	echo "This auto-enables pth (instead of pthreads)."
  AC_DEFINE(NEWTHREAD)
	HAVE_PTH="yes"
	INCLUDEPTHREAD=0
fi

dnl Checks for libraries.
AC_CHECK_LIB(m,main,,AC_MSG_ERROR("No libm or no cos"))
AC_CHECK_LIB(ncurses,main,INCLUDENCURSES=1)
AC_CHECK_LIB(curses,main,INCLUDECURSES=1)
AC_CHECK_LIB(ossaudio,main)

if test "$INCLUDEPTHREAD" = 1 ; then
	if test "$FREEBSD" = 1 -o "$OPENBSD" = 1 ; then
  	LDFLAGS="$LDFLAGS -pthread"
	else
  	AC_CHECK_LIB(pthread,main,,INCLUDEPTHREAD=0)
	fi
fi

if test "$HAVE_LIRC" = "yes" && test "$HAVE_PTH" = "no"; then
  AC_CHECK_LIB(lirc_client,lirc_init,HAVE_LIRC="yes",HAVE_LIRC="no",-llirc_client)
   
  if test "$HAVE_LIRC" = "yes" ; then
    LIRC_LIBS="-llirc_client"
		AC_SUBST(LIRC_LIBS)
    AC_DEFINE(INCLUDE_LIRC)
  fi
else
	HAVE_LIRC="no";
fi


if test "$HAVE_OGG" = "yes" ; then
  AC_CHECK_LIB(vorbisfile,main,HAVE_OGG="yes",HAVE_OGG="no",-lvorbis)
  if test "$HAVE_OGG" = "yes" ; then
    OGG_LIBS="-lvorbisfile -lvorbis"
		AC_SUBST(OGG_LIBS)
    AC_DEFINE(INCLUDE_OGG)
  fi
fi

dnl Check MySQL support
if test "$HAVE_MYSQL" = "yes" ; then
  AC_CHECK_LIB(mysqlclient,main,HAVE_MYSQL="yes",HAVE_MYSQL="no")
  if test "$HAVE_MYSQL" = "yes" ; then
    if test "$HAVE_MYSQL_MYSQL_H" = 1 ; then
      MYSQL_H="mysql/mysql.h"
    elif test "$HAVE_MYSQL_H" = 1 ; then
      MYSQL_H="mysql.h"
    else
      MYSQL_H=""
    fi
    if test -z "$MYSQL_H" ; then
      HAVE_MYSQL="no"
    else
      LIBMYSQL="-lmysqlclient"
       AC_SUBST(LIBMYSQL)
      AC_DEFINE(WANT_MYSQL)
      AC_DEFINE_UNQUOTED(MYSQL_H, <$MYSQL_H>)
    fi
  fi
fi

dnl Check PTH support
if test "$HAVE_PTH" = "yes" ; then
  if test -z "`pth-config --version 2>/dev/null`" ; then
    echo "***********"
    echo "You want PTH support but pth-config is not in your path."
    exit 1
  fi
  
  if ! test "$INCLUDEPTHREAD" = "0" ; then
    echo "***********"
    echo "You can't use pthread *and* pth, disable one of both."
    exit 1
  fi

  LDFLAGS="$LDFLAGS `pth-config --ldflags`"
  LIBS="$LIBS `pth-config --libs`"
  CXXFLAGS="$CXXFLAGS -I`pth-config --includedir`"
  dnl set CPPFLAGS so AC_CHECK_HEADER can find pth.h
  CPPFLAGS="$CPPFLAGS -I`pth-config --includedir`"
  AC_DEFINE(LIBPTH)
  HAVE_PTH="yes"
fi


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h malloc.h sys/ioctl.h unistd.h errno.h)
AC_CHECK_HEADERS(bool.h)
AC_CHECK_HEADERS(pthread.h pthread/mit/pthread.h pth.h)
AC_CHECK_HEADERS(curses.h,HAVE_CURSES_H=1)
AC_CHECK_HEADERS(sys/soundcard.h machine/soundcard.h soundcard.h getopt.h)
AC_CHECK_HEADER(sys/soundcard.h,HAVE_SYS_SOUNDCARD_H=1)
AC_CHECK_HEADER(machine/soundcard.h,HAVE_MACHINE_SOUNDCARD_H=1)
AC_CHECK_HEADER(soundcard.h,HAVE_SOUNDCARD_H=1)
AC_CHECK_HEADER(mysql/mysql.h,HAVE_MYSQL_MYSQL_H=1)
AC_CHECK_HEADER(mysql.h,HAVE_MYSQL_H=1)

dnl Forcing curses ?
if test "$FORCECURSES" = "1" ; then
     echo "Not checking for ncurses"
     INCLUDENCURSES=0;
     if test "$INCLUDECURSES" = 0 || test "$HAVE_CURSES_H" = 0; then
	echo "***********"
	echo "You want to force using curses, but curses is not found."
	exit 1
    fi
else
    AC_CHECK_HEADERS(ncurses/ncurses.h ncurses/curses.h ncurses.h)
fi
if test "$HAVE_SYS_SOUNDCARD_H" = 1 ; then
      AC_DEFINE_UNQUOTED(SOUNDCARD_HEADERFILE, <sys/soundcard.h>)
elif test "$HAVE_MACHINE_SOUNDCARD_H" = 1 ; then
      AC_DEFINE_UNQUOTED(SOUNDCARD_HEADERFILE, <machine/soundcard.h>)
elif test "$HAVE_SOUNDCARD_H" = 1 ; then
      AC_DEFINE_UNQUOTED(SOUNDCARD_HEADERFILE, <soundcard.h>)
else
	AC_MSG_ERROR(No OSS include file (soundcard.h) found, bailing out.)
fi

dnl Extra features 
AC_ARG_WITH(modules,
  [  --with-modules=LIST     Add modules as a : separated list of names],
  [ mp3b_mods=`echo "$withval"|sed -e s+':'+' '+g`
  cat << EOF > src/modules.h
#ifndef _MP3BLASTER_MODULES_
#define _MP3BLASTER_MODULES_
#include "../modules/inputplugin.h"
EOF
  for yadda in $mp3b_mods ; do
    { test -f modules/${yadda}.h && test -f modules/${yadda}.cc; }|| { echo "File modules/${yadda}.h/cc non-existant." ; exit 1; }
    echo "#include \"../modules/${yadda}.h\"" >> src/modules.h
    MP3B_MODULES="modules/${yadda}.cc $MP3B_MODULES"
  done
  AC_SUBST(MP3B_MODULES)
  cat << EOF >> src/modules.h
#endif /* _MP3BLASTER_MODULES_ */
EOF
])

dnl Check SID support
HAVE_SID="no"
if test "$WANT_SID" = 1 ; then
  AC_CHECK_LIB(sidplay, main,HAVE_SID="yes",HAVE_SID="no")
  if test "$HAVE_SID" = "yes" ; then
    SID_LIBS="-lsidplay"
    AC_DEFINE(HAVE_SIDPLAYER)
    AC_SUBST(SID_LIBS)
  fi
fi

dnl Check NAS support
HAVE_NAS="no"
if test "$WANTNAS" = "1" ; then
  AC_PATH_XTRA
  dnl X_CFLAGS are needed to find audio/audiolib.h on many systems
  tmp_CPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
  
  dnl AC_CHECK_LIB(audio, AuOpenServer,INCLUDENAS=1,,-lXt -lX11 -lm)
  AC_CHECK_LIB(audio, AuOpenServer,INCLUDENAS=1,,$X_LIBS $X_PRE_LIBS $X_EXTRA_LIBS -lXt -lX11 -lm)
  AC_CHECK_HEADER(audio/audiolib.h,INCLUDENASH=1)
  dnl LIBS=$tmp_LIBS
  dnl CXXFLAGS is not checked during configure, CPPFLAGS is though.
  CPPFLAGS=$tmp_CPPFLAGS
  
  if test "$INCLUDENAS" = 1 -a "$INCLUDENASH" = 1; then
    NAS_LIBS="$X_LIBS $X_PRE_LIBS $X_EXTRA_LIBS -laudio -lXt -lX11 -lm"
    NAS_CFLAGS=$X_CFLAGS
    AC_DEFINE(HAVE_NASPLAYER)
    AC_SUBST(NAS_LIBS)
    AC_SUBST(NAS_CFLAGS)
    HAVE_NAS="yes"
  fi
fi

if test "$OPENBSD" = 1 -o "$NETBSD" = 1 ; then
  SOUNDDEV="/dev/audio"
else
  SOUNDDEV="/dev/dsp"
fi
AC_DEFINE_UNQUOTED(SOUND_DEVICE, "$SOUNDDEV")

if test "$INCLUDEPTHREAD" = 1 ; then
  if test "$FREEBSD" = 1 -o "$OPENBSD" = 1 ; then
    LDFLAGS="$LDFLAGS -pthread"
    AC_DEFINE(_THREAD_SAFE)
    AC_DEFINE(_REENTRANT)
  else
    LIBS="$LIBS -lpthread"
    #Is _REENTRANT only needed for Linux? Is it still needed? Where is the
    #documentation about _REENTRANT???? I've read in a newsgroup _THREAD_SAFE
    #should be used for FreeBSD, _REENTRANT for linux....dunno why.
    AC_DEFINE(_REENTRANT)
  fi
  AC_DEFINE(PTHREADEDMPEG)
  dnl AC_DEFINE(THREAD_2)
elif test "$HAVE_PTH" = "no" ; then
  echo "Sorry, either libpthread OR libpth is required."
  exit 1;
fi

if test "$INCLUDENCURSES" = 1 ; then
  NCURSES_LIBS="-lncurses"
elif test "$INCLUDECURSES" = 1 ; then
  NCURSES_LIBS="-lcurses"
else
  echo 'You need a decent ncurses (called curses on OpenBSD) library!'
  exit 1
fi
AC_SUBST(NCURSES_LIBS)

dnl A check for a particular __math.h file that causes sigsegv's in combination
dnl with gcc 2.7.*  / egcs-1.1.1 or older versions
if test -f /usr/include/__math.h -a "`grep 'long long int __p = (long long int) __y' /usr/include/__math.h 2>/dev/null`" != "" -a \( "`$CXX -v 2>&1|grep 'gcc version 2.[[567]]'`" != "" -o "`$CXX -v 2>&1|tail -1|grep egcs|cut -d'(' -f2|egrep 'egcs-(0|1.(0|1.[[01]]))'`" != "" \) ; then
    CXXFLAGS="$CXXFLAGS -D__NO_MATH_INLINES"
fi
dnl Even the script above is not foolproof. Since I can't tell the difference
dnl in speed with or without this define, just define it.
dnl 2002/03/16: removed this, if you still use an ancient gcc-version and the
dnl check doesn't work, enable this yourself..
dnl CXXFLAGS="$CXXFLAGS -D__NO_MATH_INLINES"

dnl check for Network Audio System library


LDFLAGS="$LDFLAGS -L../mpegsound -L../nmixer"
LIBMPEGSOUND="-lmpegsound"
LIBNMIXER="-lnmixer"
AC_SUBST(LIBMPEGSOUND)
AC_SUBST(LIBNMIXER)

SRCDIRS="mpegsound nmixer src doc doc/charmap"
AC_SUBST(SRCDIRS)
AC_OUTPUT(src/Makefile mpegsound/Makefile Makefile nmixer/Makefile doc/Makefile doc/charmap/Makefile)

PTHREADS_OR_PTH="pthreads"
if test "$HAVE_PTH" = "yes" ; then PTHREADS_OR_PTH="pth" ; fi

AC_MSG_RESULT([
Building summary:
static binaries    $HAVE_STATIC
ogg-vorbis         $HAVE_OGG
lirc               $HAVE_LIRC
mysql mp3tag       $HAVE_MYSQL
libpth             $HAVE_PTH
pthreads or pth    $PTHREADS_OR_PTH
nas                $HAVE_NAS
sidplayer          $HAVE_SID

*****************************************************************************
* Questions? Bug reports? Read ./FAQ or go to http://mp3blaster.sf.net/     *
*****************************************************************************
])
